{"version":3,"file":"index.esm.js","sources":["../src/Logger.js"],"sourcesContent":["const Levels = [\n  'trace',\n  'debug',\n  'info',\n  'warn',\n  'error',\n  'fatal'\n];\n\nconst COMBO_ENV_DELIMITER = '|';\nconst NAME_DELIMITER = ':';\n\nfunction isString (arg) {\n  return (arg?.constructor === String);\n}\n\nfunction isError (arg) {\n  return (arg instanceof Error);\n}\n\nexport default class Logger {\n  static includes = [];\n  static excludes = [];\n  static _level = 'info';\n  static _time = function () {\n    return (new Date()).toISOString();\n  }\n\n  constructor (context = {}) {\n    if (isString(context)) {\n      context = {\n        name: context\n      };\n    }\n\n    if (!('name' in context)) {\n      throw new Error('Must specify name for logger');\n    }\n\n    this.context = context;\n    const {name} = context;\n    this.name = name;\n  }\n\n  static set time (fn) {\n    this._time = fn;\n  }\n\n  static enabled ({level, name}) {\n    // check level first since its cheaper array index\n    // comparison than the name regex stuffs\n    return this.levelEnabled(level) && this.nameEnabled(name);\n  }\n\n  static levelEnabled (level) {\n    const level_index = Levels.indexOf(level);\n    const this_index = Levels.indexOf(this.level);\n    return level_index >= this_index;\n  }\n\n  static nameEnabled (name) {\n    // TODO: probably can assume this happens only once\n    // before run so we can then memoize on name?\n    if (name === '*') {\n      return true;\n    }\n\n    for (const exclude of this.excludes) {\n      if (exclude.test(name)) {\n        return false;\n      }\n    }\n\n    return this.includes.some((include)=> {\n      return include.test(name);\n    });\n  }\n\n  static get level () {\n    return this._level;\n  }\n\n  static set level (level) {\n    const valid_level = Levels.includes(level);\n    if (!valid_level) {\n      throw new Error(`Invalid level ${level}`);\n    }\n    this._level = level;\n  }\n\n  static readConfig () {\n    function getConfig (key) {\n      let config;\n\n      if (typeof process !== 'undefined') {\n        config = process.env?.[key];\n        if (config) {\n          return config;\n        }\n      }\n\n      if (typeof window !== 'undefined') {\n        config = window.localStorage?.[key];\n        if (config) {\n          return config;\n        }\n      }\n\n      return null;\n    }\n\n    const combo = getConfig('LOGGER');\n    if (combo) {\n      const parts = combo.split(COMBO_ENV_DELIMITER);\n      if (parts.length > 1) {\n        const [level, names] = parts;\n        this.level = level;\n        this.names = names;\n      } else {\n        this.names = combo;\n      }\n    } else {\n      const level = getConfig('LOGGER_LEVEL');\n      if (level) {\n        this.level = level;\n      }\n\n      const names = getConfig('LOGGER_NAMES');\n      if (names) {\n        this.names = names;\n      }\n    }\n  }\n\n  static set names (names) {\n    if (!Array.isArray(names)) {\n      if (isString(names)) {\n        names = names.split(/[\\s,]+/);\n      } else {\n        throw new Error('setNames expects string or array or strings');\n      }\n    }\n\n    for (let name of names) {\n      name = name.replace(/\\*/g, '.*?');\n      const exclude = (name[0] === '-');\n      let dest = 'includes';\n      if (exclude) {\n        name = name.substr(1);\n        dest = 'excludes';\n      }\n      const regex = new RegExp(`^${name}$`);\n      this[dest].push(regex);\n    }\n  }\n\n  child (context = {}) {\n    if (isString(context)) {\n      context = {\n        name: context\n      };\n    }\n\n    let {name} = this.context;\n    if ('name' in context) {\n      name = [name, context.name].join(NAME_DELIMITER);\n    }\n\n    const new_context = {...this.context, ...context, name};\n    const child = new this.constructor(new_context);\n    child.level = this.level;\n\n    return child;\n  }\n\n  _log (...args) {\n    let body = {...this.context};\n\n    // DERP: Should probably just limit to two args\n    // but oh well i'm a fucken idiot\n    for (const arg of args) {\n      const has_message = ('message' in body);\n      if (isString(arg)) {\n        if (!has_message) {\n          body.message = arg;\n        }\n      } else if (isError(arg)) {\n        if (!has_message) {\n          body.message = arg.message;\n        }\n        const props = Object.getOwnPropertyNames(arg);\n        const payload = props.reduce((payload, key)=> {\n          payload[key] = arg[key];\n          return payload;\n        }, {});\n        body.error = JSON.stringify(payload);\n      } else if (arg) {\n        body = {...body, ...arg};\n      }\n    }\n    if (!('time' in body)) {\n      body.time = this.constructor._time();\n    }\n    return body;\n  }\n}\n\nLogger.levels = Levels;\nLevels.forEach((level)=> {\n  const {console} = global;\n  const fn = (level === 'fatal') ? 'error' : level;\n  Logger.prototype[level] = function log (...args) {\n    const body = this._log(...args);\n    const {message, name} = body;\n    const enabled = Logger.enabled({level, name});\n    if (enabled) {\n      console[fn](message, body);\n    }\n  };\n  Levels[level] = level;\n});\n\nLogger.readConfig();\n"],"names":["Levels","COMBO_ENV_DELIMITER","NAME_DELIMITER","isString","arg","constructor","String","isError","Error","Logger","context","name","time","fn","_time","enabled","level","levelEnabled","nameEnabled","level_index","indexOf","this_index","exclude","excludes","test","includes","some","include","_level","valid_level","readConfig","getConfig","key","config","process","env","window","localStorage","combo","parts","split","length","names","Array","isArray","replace","dest","substr","regex","RegExp","push","child","join","new_context","_log","args","body","has_message","message","props","Object","getOwnPropertyNames","payload","reduce","error","JSON","stringify","Date","toISOString","levels","forEach","console","global","prototype","log"],"mappings":"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"}